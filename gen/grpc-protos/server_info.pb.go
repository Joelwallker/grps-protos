// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: common/server_info.proto

package grpc_protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PublicNet   *ServerInfo_PublicNet    `protobuf:"bytes,3,opt,name=public_net,json=publicNet,proto3" json:"public_net,omitempty"`
	PrivateNets []*ServerInfo_PrivateNet `protobuf:"bytes,4,rep,name=private_nets,json=privateNets,proto3" json:"private_nets,omitempty"`
	Metadata    map[string]string        `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Метаданные
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_common_server_info_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_server_info_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_common_server_info_proto_rawDescGZIP(), []int{0}
}

func (x *ServerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetPublicNet() *ServerInfo_PublicNet {
	if x != nil {
		return x.PublicNet
	}
	return nil
}

func (x *ServerInfo) GetPrivateNets() []*ServerInfo_PrivateNet {
	if x != nil {
		return x.PrivateNets
	}
	return nil
}

func (x *ServerInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type TokenGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tokens []string `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *TokenGroup) Reset() {
	*x = TokenGroup{}
	mi := &file_common_server_info_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenGroup) ProtoMessage() {}

func (x *TokenGroup) ProtoReflect() protoreflect.Message {
	mi := &file_common_server_info_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenGroup.ProtoReflect.Descriptor instead.
func (*TokenGroup) Descriptor() ([]byte, []int) {
	return file_common_server_info_proto_rawDescGZIP(), []int{1}
}

func (x *TokenGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TokenGroup) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type ServerInfo_PublicNet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4 string `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6 string `protobuf:"bytes,2,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
}

func (x *ServerInfo_PublicNet) Reset() {
	*x = ServerInfo_PublicNet{}
	mi := &file_common_server_info_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo_PublicNet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo_PublicNet) ProtoMessage() {}

func (x *ServerInfo_PublicNet) ProtoReflect() protoreflect.Message {
	mi := &file_common_server_info_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo_PublicNet.ProtoReflect.Descriptor instead.
func (*ServerInfo_PublicNet) Descriptor() ([]byte, []int) {
	return file_common_server_info_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ServerInfo_PublicNet) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *ServerInfo_PublicNet) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

type ServerInfo_PrivateNet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Ip        string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *ServerInfo_PrivateNet) Reset() {
	*x = ServerInfo_PrivateNet{}
	mi := &file_common_server_info_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo_PrivateNet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo_PrivateNet) ProtoMessage() {}

func (x *ServerInfo_PrivateNet) ProtoReflect() protoreflect.Message {
	mi := &file_common_server_info_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo_PrivateNet.ProtoReflect.Descriptor instead.
func (*ServerInfo_PrivateNet) Descriptor() ([]byte, []int) {
	return file_common_server_info_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ServerInfo_PrivateNet) GetNetworkId() string {
	if x != nil {
		return x.NetworkId
	}
	return ""
}

func (x *ServerInfo_PrivateNet) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

var File_common_server_info_proto protoreflect.FileDescriptor

var file_common_server_info_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x22, 0x9c, 0x03, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4e, 0x65, 0x74, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e,
	0x65, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x65,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4e, 0x65, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x33, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x70, 0x76, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x70, 0x76, 0x36, 0x1a, 0x3b, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4e,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x22, 0x38, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x0e, 0x5a, 0x0c, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_common_server_info_proto_rawDescOnce sync.Once
	file_common_server_info_proto_rawDescData = file_common_server_info_proto_rawDesc
)

func file_common_server_info_proto_rawDescGZIP() []byte {
	file_common_server_info_proto_rawDescOnce.Do(func() {
		file_common_server_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_server_info_proto_rawDescData)
	})
	return file_common_server_info_proto_rawDescData
}

var file_common_server_info_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_common_server_info_proto_goTypes = []any{
	(*ServerInfo)(nil),            // 0: common.ServerInfo
	(*TokenGroup)(nil),            // 1: common.TokenGroup
	nil,                           // 2: common.ServerInfo.MetadataEntry
	(*ServerInfo_PublicNet)(nil),  // 3: common.ServerInfo.PublicNet
	(*ServerInfo_PrivateNet)(nil), // 4: common.ServerInfo.PrivateNet
}
var file_common_server_info_proto_depIdxs = []int32{
	3, // 0: common.ServerInfo.public_net:type_name -> common.ServerInfo.PublicNet
	4, // 1: common.ServerInfo.private_nets:type_name -> common.ServerInfo.PrivateNet
	2, // 2: common.ServerInfo.metadata:type_name -> common.ServerInfo.MetadataEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_common_server_info_proto_init() }
func file_common_server_info_proto_init() {
	if File_common_server_info_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_server_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_server_info_proto_goTypes,
		DependencyIndexes: file_common_server_info_proto_depIdxs,
		MessageInfos:      file_common_server_info_proto_msgTypes,
	}.Build()
	File_common_server_info_proto = out.File
	file_common_server_info_proto_rawDesc = nil
	file_common_server_info_proto_goTypes = nil
	file_common_server_info_proto_depIdxs = nil
}
